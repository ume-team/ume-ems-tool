<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.umeframework.ems.entity">
  <!-- EM 制约（SQL）配置表 [EM_CONS_SQL_CFG] -->
  
  <!-- Insert one -->
  <insert id="EM_CONS_SQL_CFG_INSERT" parameterType="org.umeframework.ems.entity.EmConsSqlCfgDto">
    INSERT INTO EM_CONS_SQL_CFG (
      CONS_ID,
      CONS_NAME,
      CONS_DESC,
      CONS_SQLR,
      CONS_SQLU,
      CREATE_AUTHOR,
      CREATE_DATETIME,
      UPDATE_AUTHOR,
      UPDATE_DATETIME
    ) VALUES (
      #{consId},
      #{consName},
      #{consDesc},
      #{consSqlr},
      #{consSqlu},
      #{createAuthor},
      current_timestamp(),
      #{updateAuthor},
      current_timestamp()
    )
  </insert>

  <!-- Update with optimism check) -->
  <update id="EM_CONS_SQL_CFG_UPDATE" parameterType="org.umeframework.ems.entity.EmConsSqlCfgDto">
    UPDATE EM_CONS_SQL_CFG
    SET
      CONS_NAME = #{consName},
      CONS_DESC = #{consDesc},
      CONS_SQLR = #{consSqlr},
      CONS_SQLU = #{consSqlu},
      CREATE_AUTHOR = #{createAuthor},
      CREATE_DATETIME = #{createDatetime},
      UPDATE_AUTHOR = #{updateAuthor},
      UPDATE_DATETIME = current_timestamp() 
    WHERE UPDATE_DATETIME = #{updateDatetime}
      AND CONS_ID = #{consId}
      <if test="updateDatetime!=null"> AND UPDATE_DATETIME = #{updateDatetime}</if>
  </update>

  <!-- Smart update -->
  <update id="EM_CONS_SQL_CFG_SMART_UPDATE" parameterType="org.umeframework.ems.entity.EmConsSqlCfgDto">
    UPDATE EM_CONS_SQL_CFG
    <set>
      <if test="consName!=null">CONS_NAME = #{consName},</if>
      <if test="consDesc!=null">CONS_DESC = #{consDesc},</if>
      <if test="consSqlr!=null">CONS_SQLR = #{consSqlr},</if>
      <if test="consSqlu!=null">CONS_SQLU = #{consSqlu},</if>
      <if test="createAuthor!=null">CREATE_AUTHOR = #{createAuthor},</if>
      <if test="createDatetime!=null">CREATE_DATETIME = #{createDatetime},</if>
      <if test="updateAuthor!=null">UPDATE_AUTHOR = #{updateAuthor},</if>
      UPDATE_DATETIME = current_timestamp()
    </set>
    WHERE 
       CONS_ID = #{consId}
      <if test="updateDatetime!=null"> AND UPDATE_DATETIME = #{updateDatetime}</if>
  </update>
  
  <!-- Delete one -->
  <delete id="EM_CONS_SQL_CFG_DELETE" parameterType="org.umeframework.ems.entity.EmConsSqlCfgDto">
    DELETE FROM EM_CONS_SQL_CFG
    WHERE
      CONS_ID = #{consId} 
      <if test="updateDatetime!=null"> AND UPDATE_DATETIME = #{updateDatetime}</if>
  </delete>

  <!-- Delete all matched records -->
  <delete id="EM_CONS_SQL_CFG_DELETE_ALL" parameterType="org.umeframework.ems.entity.EmConsSqlCfgDto">
    DELETE FROM EM_CONS_SQL_CFG
    WHERE 1=1
      <if test="consId != null">AND CONS_ID = #{consId}</if>
      <if test="consName != null">AND CONS_NAME = #{consName}</if>
      <if test="consDesc != null">AND CONS_DESC = #{consDesc}</if>
      <if test="consSqlr != null">AND CONS_SQLR = #{consSqlr}</if>
      <if test="consSqlu != null">AND CONS_SQLU = #{consSqlu}</if>
      <if test="createAuthor != null">AND CREATE_AUTHOR = #{createAuthor}</if>
      <if test="updateAuthor != null">AND UPDATE_AUTHOR = #{updateAuthor}</if>
      <if test="createDatetime != null">AND CREATE_DATETIME = #{createDatetime}</if>
      <if test="updateDatetime != null">AND UPDATE_DATETIME = #{updateDatetime}</if>
  </delete>

  <!-- Find by primary key -->
  <select id="EM_CONS_SQL_CFG_FIND" resultType="org.umeframework.ems.entity.EmConsSqlCfgDto">
    SELECT
      CONS_ID AS "consId",
      CONS_NAME AS "consName",
      CONS_DESC AS "consDesc",
      CONS_SQLR AS "consSqlr",
      CONS_SQLU AS "consSqlu",
      CREATE_AUTHOR AS "createAuthor",
      CREATE_DATETIME AS "createDatetime",
      UPDATE_AUTHOR AS "updateAuthor",
      UPDATE_DATETIME AS "updateDatetime"
    FROM EM_CONS_SQL_CFG
    WHERE
      CONS_ID = #{consId} 
  </select>

  <!-- Find by primary key for update with row lock -->
  <select id="EM_CONS_SQL_CFG_FIND_FOR_UPDATE" resultType="org.umeframework.ems.entity.EmConsSqlCfgDto">
    SELECT
      CONS_ID AS "consId",
      CONS_NAME AS "consName",
      CONS_DESC AS "consDesc",
      CONS_SQLR AS "consSqlr",
      CONS_SQLU AS "consSqlu",
      CREATE_AUTHOR AS "createAuthor",
      CREATE_DATETIME AS "createDatetime",
      UPDATE_AUTHOR AS "updateAuthor",
      UPDATE_DATETIME AS "updateDatetime"
    FROM EM_CONS_SQL_CFG
    WHERE
      CONS_ID = #{consId} 
    FOR UPDATE
  </select>

  <!-- Search -->
  <select id="EM_CONS_SQL_CFG_FIND_LIST" resultType="org.umeframework.ems.entity.EmConsSqlCfgDto">
    SELECT
      CONS_ID AS "consId",
      CONS_NAME AS "consName",
      CONS_DESC AS "consDesc",
      CONS_SQLR AS "consSqlr",
      CONS_SQLU AS "consSqlu",
      CREATE_AUTHOR AS "createAuthor",
      CREATE_DATETIME AS "createDatetime",
      UPDATE_AUTHOR AS "updateAuthor",
      UPDATE_DATETIME AS "updateDatetime"
    FROM EM_CONS_SQL_CFG
    WHERE 1 = 1 
      <if test="consId != null">AND CONS_ID = #{consId}</if>
      <if test="consName != null">AND CONS_NAME = #{consName}</if>
      <if test="consDesc != null">AND CONS_DESC = #{consDesc}</if>
      <if test="consSqlr != null">AND CONS_SQLR = #{consSqlr}</if>
      <if test="consSqlu != null">AND CONS_SQLU = #{consSqlu}</if>
      <if test="createAuthor != null">AND CREATE_AUTHOR = #{createAuthor}</if>
      <if test="updateAuthor != null">AND UPDATE_AUTHOR = #{updateAuthor}</if>
      <if test="createDatetime != null">AND CREATE_DATETIME &gt; #{createDatetime}</if>
      <if test="updateDatetime != null">AND UPDATE_DATETIME &gt; #{updateDatetime}</if>
    <if test="theOrderByCondition != null"> ORDER BY ${theOrderByCondition}</if>
    <if test="theGroupByCondition != null"> GROUP BY ${theGroupByCondition}</if>
    <if test="theFetchSize != null">LIMIT ${theFetchStart} , ${theFetchSize}</if>
  </select>

  <!-- Like Search -->
  <select id="EM_CONS_SQL_CFG_FIND_LIST_LIKE" resultType="org.umeframework.ems.entity.EmConsSqlCfgDto">
    SELECT
      CONS_ID AS "consId",
      CONS_NAME AS "consName",
      CONS_DESC AS "consDesc",
      CONS_SQLR AS "consSqlr",
      CONS_SQLU AS "consSqlu",
      CREATE_AUTHOR AS "createAuthor",
      CREATE_DATETIME AS "createDatetime",
      UPDATE_AUTHOR AS "updateAuthor",
      UPDATE_DATETIME AS "updateDatetime"
    FROM EM_CONS_SQL_CFG
    WHERE 1 = 1 
      <if test="consId != null">AND CONS_ID LIKE CONCAT('%', #{consId}, '%')</if>
      <if test="consName != null">AND CONS_NAME LIKE CONCAT('%', #{consName}, '%')</if>
      <if test="consDesc != null">AND CONS_DESC LIKE CONCAT('%', #{consDesc}, '%')</if>
      <if test="consSqlr != null">AND CONS_SQLR LIKE CONCAT('%', #{consSqlr}, '%')</if>
      <if test="consSqlu != null">AND CONS_SQLU LIKE CONCAT('%', #{consSqlu}, '%')</if>
      <if test="createAuthor != null">AND CREATE_AUTHOR LIKE CONCAT('%', #{createAuthor}, '%')</if>
      <if test="updateAuthor != null">AND UPDATE_AUTHOR LIKE CONCAT('%', #{updateAuthor}, '%')</if>
      <if test="createDatetime != null">AND CREATE_DATETIME &gt; #{createDatetime}</if>
      <if test="updateDatetime != null">AND UPDATE_DATETIME &gt; #{updateDatetime}</if>
    <if test="theOrderByCondition != null"> ORDER BY ${theOrderByCondition}</if>
    <if test="theGroupByCondition != null"> GROUP BY ${theGroupByCondition}</if>
    <if test="theFetchSize != null">LIMIT ${theFetchStart} , ${theFetchSize}</if>    
  </select>
  
  <!-- Dynamic Search -->
  <select id="EM_CONS_SQL_CFG_FIND_LIST_MATCH" resultType="org.umeframework.ems.entity.EmConsSqlCfgDto">
    SELECT
      CONS_ID AS "consId",
      CONS_NAME AS "consName",
      CONS_DESC AS "consDesc",
      CONS_SQLR AS "consSqlr",
      CONS_SQLU AS "consSqlu",
      CREATE_AUTHOR AS "createAuthor",
      CREATE_DATETIME AS "createDatetime",
      UPDATE_AUTHOR AS "updateAuthor",
      UPDATE_DATETIME AS "updateDatetime"
    FROM EM_CONS_SQL_CFG
    WHERE 1 = 1 
      <if test="consId != null">AND ( ${consId} )</if>
      <if test="consName != null">AND ( ${consName} )</if>
      <if test="consDesc != null">AND ( ${consDesc} )</if>
      <if test="consSqlr != null">AND ( ${consSqlr} )</if>
      <if test="consSqlu != null">AND ( ${consSqlu} )</if>
      <if test="theSQLCondition != null"> AND ( ${theSQLCondition} )</if>
      <if test="theOrderByCondition != null"> ORDER BY ${theOrderByCondition}</if>
      <if test="theGroupByCondition != null"> GROUP BY ${theGroupByCondition}</if>
      <if test="theFetchSize != null">LIMIT ${theFetchStart} , ${theFetchSize}</if>
  </select>
  
  <!-- Count by input condition -->
  <select id="EM_CONS_SQL_CFG_COUNT" resultType="java.lang.Integer">
    SELECT count(*)
    FROM EM_CONS_SQL_CFG
    WHERE 1 = 1 
      <if test="theSQLCondition != null"> AND ( ${theSQLCondition} )</if>
      <if test="consId != null">AND CONS_ID = #{consId}</if>
      <if test="consName != null">AND CONS_NAME = #{consName}</if>
      <if test="consDesc != null">AND CONS_DESC = #{consDesc}</if>
      <if test="consSqlr != null">AND CONS_SQLR = #{consSqlr}</if>
      <if test="consSqlu != null">AND CONS_SQLU = #{consSqlu}</if>
  </select>




</mapper>




DROP TABLE IF EXISTS `EM_USER` ;
CREATE TABLE `EM_USER` (
    `USER_ID` VARCHAR(16) NOT NULL	,
    `USER_NAME` VARCHAR(64) 	,
    `USER_PASSWORD` VARCHAR(64) 	,
    `USER_MOBILE` VARCHAR(16) 	,
    `USER_MOBILE_BAK` VARCHAR(16) 	,
    `USER_IDENTITY_CARD` VARCHAR(32) 	,
    `USER_DRIVE_LICENSE` VARCHAR(32) 	,
    `USER_PASSPORT` VARCHAR(32) 	,
    `USER_ADDRESS` VARCHAR(256) 	,
    `USER_EMAIL` VARCHAR(64) 	,
    `USER_EMAIL_BAK` VARCHAR(64) 	,
    `USER_LEVEL` INT(8) 	,
    `USER_STATUS` INT(2) 	,
    `CREATE_AUTHOR` VARCHAR(32),
    `CREATE_DATETIME` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    `UPDATE_AUTHOR` VARCHAR(32),
    `UPDATE_DATETIME` TIMESTAMP  DEFAULT CURRENT_TIMESTAMP
);
ALTER TABLE `EM_USER` ADD CONSTRAINT `PK_EM_USER` PRIMARY KEY ( USER_ID ) ;


DROP TABLE IF EXISTS `EM_ROLE` ;
CREATE TABLE `EM_ROLE` (
    `ROLE_ID` VARCHAR(32) NOT NULL	,
    `ROLE_NAME` VARCHAR(64) 	,
    `ROLE_DESC` VARCHAR(128) 	,
    `CREATE_AUTHOR` VARCHAR(32),
    `CREATE_DATETIME` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    `UPDATE_AUTHOR` VARCHAR(32),
    `UPDATE_DATETIME` TIMESTAMP  DEFAULT CURRENT_TIMESTAMP
);
ALTER TABLE `EM_ROLE` ADD CONSTRAINT `PK_EM_ROLE` PRIMARY KEY ( ROLE_ID ) ;


DROP TABLE IF EXISTS `EM_USER_ROLE` ;
CREATE TABLE `EM_USER_ROLE` (
    `USER_ID` VARCHAR(32) NOT NULL	,
    `ROLE_ID` VARCHAR(32) NOT NULL	,
    `CREATE_AUTHOR` VARCHAR(32),
    `CREATE_DATETIME` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    `UPDATE_AUTHOR` VARCHAR(32),
    `UPDATE_DATETIME` TIMESTAMP  DEFAULT CURRENT_TIMESTAMP
);
ALTER TABLE `EM_USER_ROLE` ADD CONSTRAINT `PK_EM_USER_ROLE` PRIMARY KEY ( USER_ID ,ROLE_ID ) ;


DROP TABLE IF EXISTS `EM_RESOURCE` ;
CREATE TABLE `EM_RESOURCE` (
    `RES_ID` VARCHAR(32) NOT NULL	,
    `RES_TYPE` INT(2) NOT NULL	,
    `RES_NAME` VARCHAR(64) 	,
    `RES_GROUP` VARCHAR(64) 	,
    `RES_LINK` VARCHAR(1024) 	,
    `RES_INDEX` INT(8) 	,
    `RES_STATUS` INT(1) 	,
    `CREATE_AUTHOR` VARCHAR(32),
    `CREATE_DATETIME` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    `UPDATE_AUTHOR` VARCHAR(32),
    `UPDATE_DATETIME` TIMESTAMP  DEFAULT CURRENT_TIMESTAMP
);
ALTER TABLE `EM_RESOURCE` ADD CONSTRAINT `PK_EM_RESOURCE` PRIMARY KEY ( RES_ID ,RES_TYPE ) ;


DROP TABLE IF EXISTS `EM_ROLE_ACL` ;
CREATE TABLE `EM_ROLE_ACL` (
    `ROLE_ID` VARCHAR(32) NOT NULL	,
    `ACC_RES_ID` VARCHAR(32) NOT NULL	,
    `ACC_RES_TYPE` INT(2) NOT NULL	,
    `ACC_LEVEL` INT(2) NOT NULL	DEFAULT 1,
    `CREATE_AUTHOR` VARCHAR(32),
    `CREATE_DATETIME` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    `UPDATE_AUTHOR` VARCHAR(32),
    `UPDATE_DATETIME` TIMESTAMP  DEFAULT CURRENT_TIMESTAMP
);
ALTER TABLE `EM_ROLE_ACL` ADD CONSTRAINT `PK_EM_ROLE_ACL` PRIMARY KEY ( ROLE_ID ,ACC_RES_ID ,ACC_RES_TYPE ,ACC_LEVEL ) ;


DROP TABLE IF EXISTS `EM_DS_CFG` ;
CREATE TABLE `EM_DS_CFG` (
    `ID` VARCHAR(32) NOT NULL	,
    `NAME` VARCHAR(128) 	,
    `URL` VARCHAR(128) NOT NULL	,
    `DRIVER_CLASS` VARCHAR(128) NOT NULL	,
    `USERNAME` VARCHAR(32) NOT NULL	,
    `PASSWORD` VARCHAR(32) NOT NULL	,
    `MAX_WAIT` VARCHAR(8) 	DEFAULT '1',
    `MIN_IDLE` VARCHAR(8) 	DEFAULT '1',
    `MAX_IDLE` VARCHAR(8) 	DEFAULT '2',
    `MAX_ACTIVE` VARCHAR(8) 	DEFAULT '5',
    `INITIAL_SIZE` VARCHAR(8) 	DEFAULT '1',
    `CREATE_AUTHOR` VARCHAR(32),
    `CREATE_DATETIME` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    `UPDATE_AUTHOR` VARCHAR(32),
    `UPDATE_DATETIME` TIMESTAMP  DEFAULT CURRENT_TIMESTAMP
);
ALTER TABLE `EM_DS_CFG` ADD CONSTRAINT `PK_EM_DS_CFG` PRIMARY KEY ( ID ) ;


DROP TABLE IF EXISTS `EM_TBL_CFG` ;
CREATE TABLE `EM_TBL_CFG` (
    `ENT_ID` VARCHAR(32) NOT NULL	,
    `ENT_NAME` VARCHAR(64) 	,
    `ENT_TYPE` INT(2) 	DEFAULT 0,
    `ENT_LAYOUT` VARCHAR(64) 	,
    `REF_TBL_ID` VARCHAR(32) 	,
    `REF_TBL_DATASOURCE` VARCHAR(32) 	,
    `REF_TBL_READONLY_COLS` VARCHAR(256) 	,
    `REF_TBL_HIDE_COLS` VARCHAR(256) 	,
    `REF_TBL_DISABLE_COLS` VARCHAR(256) 	,
    `PRE_PROC_DISP` VARCHAR(128) 	,
    `PRE_PROC_SAVE` VARCHAR(128) 	,
    `PRE_PROC_VALIDATE` VARCHAR(128) 	,
    `CUS_ENTITY_MANAGER` VARCHAR(128) 	,
    `CREATE_AUTHOR` VARCHAR(32),
    `CREATE_DATETIME` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    `UPDATE_AUTHOR` VARCHAR(32),
    `UPDATE_DATETIME` TIMESTAMP  DEFAULT CURRENT_TIMESTAMP
);
ALTER TABLE `EM_TBL_CFG` ADD CONSTRAINT `PK_EM_TBL_CFG` PRIMARY KEY ( ENT_ID ) ;


DROP TABLE IF EXISTS `EM_TBL_COL_CFG` ;
CREATE TABLE `EM_TBL_COL_CFG` (
    `ENT_ID` VARCHAR(32) NOT NULL	,
    `COL_ID` VARCHAR(32) NOT NULL	,
    `COL_NAME` VARCHAR(64) 	,
    `DATA_SUB_TYPE` VARCHAR(32) 	,
    `NOT_NULL` INT(1) 	,
    `DEFAULT_VALUE` VARCHAR(128) 	,
    `DATA_LENGTH_MIN` INT(32) 	,
    `DATA_LENGTH_MAX` INT(32) 	,
    `DATA_RANGE_MIN` VARCHAR(128) 	,
    `DATA_RANGE_MAX` VARCHAR(128) 	,
    `CONSTRAINT_TYPE` INT(2) 	,
    `CONSTRAINT_REF` VARCHAR(32) 	,
    `DISP_TYPE` INT(3) 	,
    `DISP_FORMAT` VARCHAR(128) 	,
    `EDIT_FORMAT` VARCHAR(128) 	,
    `PRE_PROC_DISP` VARCHAR(128) 	,
    `PRE_PROC_SAVE` VARCHAR(128) 	,
    `CREATE_AUTHOR` VARCHAR(32),
    `CREATE_DATETIME` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    `UPDATE_AUTHOR` VARCHAR(32),
    `UPDATE_DATETIME` TIMESTAMP  DEFAULT CURRENT_TIMESTAMP
);
ALTER TABLE `EM_TBL_COL_CFG` ADD CONSTRAINT `PK_EM_TBL_COL_CFG` PRIMARY KEY ( ENT_ID ,COL_ID ) ;


DROP TABLE IF EXISTS `EM_CONS_CODE_CFG` ;
CREATE TABLE `EM_CONS_CODE_CFG` (
    `CONS_ID` VARCHAR(32) NOT NULL	,
    `CONS_SEQ` INT(8) NOT NULL	,
    `CONS_NAME` VARCHAR(32) 	,
    `CONS_DESC` VARCHAR(64) 	,
    `DISP_VALUE` VARCHAR(256) 	,
    `STORE_VALUE` VARCHAR(256) 	,
    `STORE_TYPE` INT(2) 	,
    `CREATE_AUTHOR` VARCHAR(32),
    `CREATE_DATETIME` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    `UPDATE_AUTHOR` VARCHAR(32),
    `UPDATE_DATETIME` TIMESTAMP  DEFAULT CURRENT_TIMESTAMP
);
ALTER TABLE `EM_CONS_CODE_CFG` ADD CONSTRAINT `PK_EM_CONS_CODE_CFG` PRIMARY KEY ( CONS_ID ,CONS_SEQ ) ;


DROP TABLE IF EXISTS `EM_CONS_SQL_CFG` ;
CREATE TABLE `EM_CONS_SQL_CFG` (
    `CONS_ID` VARCHAR(32) NOT NULL	,
    `CONS_NAME` VARCHAR(32) 	,
    `CONS_DESC` VARCHAR(64) 	,
    `CONS_SQLR` VARCHAR(1024) 	,
    `CONS_SQLU` VARCHAR(1024) 	,
    `CREATE_AUTHOR` VARCHAR(32),
    `CREATE_DATETIME` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    `UPDATE_AUTHOR` VARCHAR(32),
    `UPDATE_DATETIME` TIMESTAMP  DEFAULT CURRENT_TIMESTAMP
);
ALTER TABLE `EM_CONS_SQL_CFG` ADD CONSTRAINT `PK_EM_CONS_SQL_CFG` PRIMARY KEY ( CONS_ID ) ;


DROP TABLE IF EXISTS `EM_SEQ` ;
CREATE TABLE `EM_SEQ` (
    `ITEM_NAME` VARCHAR(8) NOT NULL	,
    `MIN_VALUE` BIGINT(16) NOT NULL	,
    `MAX_VALUE` BIGINT(32) NOT NULL	,
    `CURRENT_INDEX` BIGINT(32) NOT NULL	,
    `INCREMENT_VALUE` BIGINT(16) NOT NULL	,
    `ITEM_LENGTH` INT 	,
    `PREFIX` VARCHAR(64) 	,
    `POSTFIX` VARCHAR(64) 	,
    `REPEATABLE` VARCHAR(1) 	,
    `FORMATTER` VARCHAR(64) 	,
    `CREATE_AUTHOR` VARCHAR(32),
    `CREATE_DATETIME` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    `UPDATE_AUTHOR` VARCHAR(32),
    `UPDATE_DATETIME` TIMESTAMP  DEFAULT CURRENT_TIMESTAMP
);
ALTER TABLE `EM_SEQ` ADD CONSTRAINT `PK_EM_SEQ` PRIMARY KEY ( ITEM_NAME ) ;


DROP TABLE IF EXISTS `EM_TASK_MGR` ;
CREATE TABLE `EM_TASK_MGR` (
    `TASK_ID` VARCHAR(8) NOT NULL	,
    `TASK_NAME` VARCHAR(64) 	,
    `TASK_ENABLE` INT(1) 	DEFAULT 0,
    `TASK_STATUS` VARCHAR(64) 	,
    `CREATE_AUTHOR` VARCHAR(32),
    `CREATE_DATETIME` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    `UPDATE_AUTHOR` VARCHAR(32),
    `UPDATE_DATETIME` TIMESTAMP  DEFAULT CURRENT_TIMESTAMP
);
ALTER TABLE `EM_TASK_MGR` ADD CONSTRAINT `PK_EM_TASK_MGR` PRIMARY KEY ( TASK_ID ) ;


DROP TABLE IF EXISTS `ZO_SAMPLE_001` ;
CREATE TABLE `ZO_SAMPLE_001` (
    `TEST_COL_F01` VARCHAR(10) NOT NULL	DEFAULT 'AAA',
    `TEST_COL_F02` VARCHAR(10) NOT NULL	,
    `TEST_COL_F03` INT(3) 	,
    `TEST_COL_F04` INT 	DEFAULT 32,
    `TEST_COL_F05` DATE 	,
    `TEST_COL_F06` TIME 	,
	`TEST_COL_F07` TIMESTAMP 	NULL DEFAULT NULL,
    `TEST_COL_F08` BIGINT(50) 	,
    `TEST_COL_F09` BIGINT 	,
    `TEST_COL_F10` DECIMAL(10,2) 	,
    `TEST_COL_F11` DECIMAL 	,
    `TEST_COL_F12` CHAR(3) 	,
    `TEST_COL_F13` CHAR(3) 	,
    `TEST_COL_F14` TEXT(128) 	,
    `TEST_COL_F15` TEXT(128) 	,
    `TEST_COL_F16` BLOB 	,
    `TEST_COL_F17` TEXT 	,
	`TEST_COL_F18` INT AUTO_INCREMENT PRIMARY KEY,
    `CREATE_AUTHOR` VARCHAR(32),
    `CREATE_DATETIME` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    `UPDATE_AUTHOR` VARCHAR(32),
    `UPDATE_DATETIME` TIMESTAMP  DEFAULT CURRENT_TIMESTAMP
);


DROP TABLE IF EXISTS `ZO_SAMPLE_002` ;
CREATE TABLE `ZO_SAMPLE_002` (
	`TEST_COL_F01` INT AUTO_INCREMENT PRIMARY KEY,
    `TEST_COL_F02` VARCHAR(10) 	,
    `TEST_COL_F03` INT(3) 	,
    `TEST_COL_F04` INT 	DEFAULT 32,
    `TEST_COL_F05` DATE 	,
    `TEST_COL_F06` TIME 	,
	`TEST_COL_F07` TIMESTAMP 	NULL DEFAULT NULL,
    `TEST_COL_F08` BIGINT(50) 	,
    `TEST_COL_F09` BIGINT 	,
    `TEST_COL_F10` DECIMAL(10,2) 	,
    `TEST_COL_F11` DECIMAL 	,
    `TEST_COL_F12` CHAR(3) 	,
    `TEST_COL_F13` CHAR(3) 	,
    `TEST_COL_F14` TEXT(128) 	,
    `TEST_COL_F15` TEXT(128) 	,
    `TEST_COL_F16` BLOB 	,
    `TEST_COL_F17` TEXT 	,
    `CREATE_AUTHOR` VARCHAR(32),
    `CREATE_DATETIME` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    `UPDATE_AUTHOR` VARCHAR(32),
    `UPDATE_DATETIME` TIMESTAMP  DEFAULT CURRENT_TIMESTAMP
);

